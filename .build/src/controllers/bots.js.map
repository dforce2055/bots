{
  "version": 3,
  "sources": ["../../../src/controllers/bots.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\nimport { Express } from 'express'\nimport { DataBase } from '../db/database'\nimport { WhatssAppBot, TelegramBot, Task } from '../utils'\nimport { Customer } from '../models'\nconst {\n  TELEGRAM_TOKEN,\n  TELEGRAM_TOKEN2,\n  PHONE,\n  PHONE2,\n} = process.env\n\nconst addCustomers = async () => {\n  try {\n    const customer = new Customer({\n      name: 'Bigote',\n      email: 'deperez2055@gmail.com',\n      phone: PHONE,\n      telegram_bot_client_id: TELEGRAM_TOKEN,\n      whatsapp_bot_client_id: PHONE\n    })\n    const customer2 = new Customer({\n      name: 'Open House Padel Pinamar',\n      email: 'openhouse@gmail.com',\n      phone: PHONE2,\n      telegram_bot_client_id: TELEGRAM_TOKEN2,\n      whatsapp_bot_client_id: PHONE2\n    })\n    await customer.save()\n    await customer2.save()\n    console.log('\uD83D\uDFE2 Customers added to Data Base!')\n  } catch (error) {\n    console.log('\uD83D\uDFE2 Customers already in Data Base!')\n  }\n}\n\nexport const startBots = async (app: Express, dbInstance: any) => {\n  const db = dbInstance || await DataBase.start()\n  app.set('db', db)\n  // add customers if you needed\n  // await addCustomers()\n\n  // TODO: load all bots from DB\n  const telegramBot = new TelegramBot({\n    clientId: TELEGRAM_TOKEN || ''\n  })\n  telegramBot.start()\n  const telegramBot2 = new TelegramBot({\n    clientId: TELEGRAM_TOKEN2 || ''\n  })\n  telegramBot2.start()\n  console.log('\uD83D\uDFE2 Telegram Bots are ready!')\n\n\n  const store = await db?.getMongooseStore()\n  // TODO: load all bots from DB\n  const whatsAppBot = new WhatssAppBot({\n    store,\n    clientId: '549' + '2254620036'\n  })\n  await whatsAppBot.start()\n  console.log('\uD83D\uDFE2 WhatsApp Bots are ready!')\n\n  // // bot.sendMessage({ clientId: '5492254620036', message: 'Hola Bigote!' })\n  // const contacts = await bot.getContacts()\n\n  // const businessContacts =  await bot.getBusinessContacts()\n  // const blockedContacts =  await bot.getBlockedContacts()\n  // const filtered =  await bot.getFilteredContacsByName('UADE')\n\n\n  // actions can't take parameters\n  const action = async () => {\n    whatsAppBot.sendMessage({ clientId: '5492254620036', message: 'Hola Bigote! ' + new Date().toISOString() })\n    await telegramBot.sendMessage({\n      chatId: '1266264139',\n      message: 'Hola Bigote! ' + new Date().toISOString()\n    })\n  }\n\n  const task = new Task({\n    expression: '* * * * * *', //'0 30 6 * * *',\n    action,\n    options: {\n      name: 'test-task-1',\n      scheduled: false,\n      timeZone: 'America/Argentina/Buenos_Aires'\n    }\n  })\n\n  task.printFrequency()\n  task.start()\n\n  setTimeout(() => {\n    task?.stop()\n  }, 2000)\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,sBAAyB;AACzB,mBAAgD;AAChD,oBAAyB;AACzB,MAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI,QAAQ;AAEZ,MAAM,eAAe,YAAY;AAC/B,MAAI;AACF,UAAM,WAAW,IAAI,uBAAS;AAAA,MAC5B,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,IAC1B,CAAC;AACD,UAAM,YAAY,IAAI,uBAAS;AAAA,MAC7B,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,IAC1B,CAAC;AACD,UAAM,SAAS,KAAK;AACpB,UAAM,UAAU,KAAK;AACrB,YAAQ,IAAI,yCAAkC;AAAA,EAChD,SAAS,OAAP;AACA,YAAQ,IAAI,2CAAoC;AAAA,EAClD;AACF;AAEO,MAAM,YAAY,OAAO,KAAc,eAAoB;AAChE,QAAM,KAAK,cAAc,MAAM,yBAAS,MAAM;AAC9C,MAAI,IAAI,MAAM,EAAE;AAKhB,QAAM,cAAc,IAAI,yBAAY;AAAA,IAClC,UAAU,kBAAkB;AAAA,EAC9B,CAAC;AACD,cAAY,MAAM;AAClB,QAAM,eAAe,IAAI,yBAAY;AAAA,IACnC,UAAU,mBAAmB;AAAA,EAC/B,CAAC;AACD,eAAa,MAAM;AACnB,UAAQ,IAAI,oCAA6B;AAGzC,QAAM,QAAQ,OAAM,yBAAI;AAExB,QAAM,cAAc,IAAI,0BAAa;AAAA,IACnC;AAAA,IACA,UAAU;AAAA,EACZ,CAAC;AACD,QAAM,YAAY,MAAM;AACxB,UAAQ,IAAI,oCAA6B;AAWzC,QAAM,SAAS,YAAY;AACzB,gBAAY,YAAY,EAAE,UAAU,iBAAiB,SAAS,kBAAkB,IAAI,KAAK,EAAE,YAAY,EAAE,CAAC;AAC1G,UAAM,YAAY,YAAY;AAAA,MAC5B,QAAQ;AAAA,MACR,SAAS,kBAAkB,IAAI,KAAK,EAAE,YAAY;AAAA,IACpD,CAAC;AAAA,EACH;AAEA,QAAM,OAAO,IAAI,kBAAK;AAAA,IACpB,YAAY;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,WAAW;AAAA,MACX,UAAU;AAAA,IACZ;AAAA,EACF,CAAC;AAED,OAAK,eAAe;AACpB,OAAK,MAAM;AAEX,aAAW,MAAM;AACf,iCAAM;AAAA,EACR,GAAG,GAAI;AACT;",
  "names": []
}
