{
  "version": 3,
  "sources": ["../../../src/controllers/ping.ts"],
  "sourcesContent": ["import express, { Request, Response } from 'express'\nimport { Get, Post, Route, Tags } from 'tsoa'\n\ninterface PingResponse {\n  message: string\n}\n\n// class tsoa declaration for documentation purposes\n@Route('/api/v1/ping')\nexport class PingController {\n  @Get('{id}')\n  public async getById(id: string): Promise<PingResponse> {\n    return {\n      message: `pong id ${id}`\n    }\n  }\n  \n  @Get('/')\n  public async getMessage(): Promise<PingResponse> {\n    return {\n      message: 'pong'\n    }\n  }\n}\n\n// methods to be used in the routes\nexport const getById = async (req: Request, res: Response) => {\n  const { id } = req.params ?? '1'\n  if (!id)\n    return res.status(400).send({\n      message: 'id is required'\n    })\n  \n  const controller = new PingController()\n  const response = await controller.getById(id)\n  return res.send(response)\n}\nexport const getMessage = async (req: Request, res: Response) => {\n  const controller = new PingController()\n  const response = await controller.getMessage()\n  return res.send(response)\n}\n\nexport const PingControllerInstance = {\n  getMessage,\n  getById\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAuC;AAQhC,IAAM,iBAAN,MAAqB;AAAA,EAE1B,MAAa,QAAQ,IAAmC;AACtD,WAAO;AAAA,MACL,SAAS,WAAW;AAAA,IACtB;AAAA,EACF;AAAA,EAGA,MAAa,aAAoC;AAC/C,WAAO;AAAA,MACL,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAZe;AAAA,MADZ,iBAAI,MAAM;AAAA,GADA,eAEE;AAOA;AAAA,MADZ,iBAAI,GAAG;AAAA,GARG,eASE;AATF,iBAAN;AAAA,MADN,mBAAM,cAAc;AAAA,GACR;AAiBN,MAAM,UAAU,OAAO,KAAc,QAAkB;AAC5D,QAAM,EAAE,GAAG,IAAI,IAAI,UAAU;AAC7B,MAAI,CAAC;AACH,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK;AAAA,MAC1B,SAAS;AAAA,IACX,CAAC;AAEH,QAAM,aAAa,IAAI,eAAe;AACtC,QAAM,WAAW,MAAM,WAAW,QAAQ,EAAE;AAC5C,SAAO,IAAI,KAAK,QAAQ;AAC1B;AACO,MAAM,aAAa,OAAO,KAAc,QAAkB;AAC/D,QAAM,aAAa,IAAI,eAAe;AACtC,QAAM,WAAW,MAAM,WAAW,WAAW;AAC7C,SAAO,IAAI,KAAK,QAAQ;AAC1B;AAEO,MAAM,yBAAyB;AAAA,EACpC;AAAA,EACA;AACF;",
  "names": []
}
