{
  "version": 3,
  "sources": ["../../../src/db/database.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\nimport * as dotenv from 'dotenv'\ndotenv.config()\nconst { MongoStore } = require('wwebjs-mongo');\nconst mongoose = require('mongoose')\n\nexport class DataBase {\n  mongooseStore: any | undefined\n  #mongoose: any | undefined\n\n  private constructor(\n    mongooseStore: any | undefined,\n    mongoose: any | undefined\n  ) {\n    this.mongooseStore = mongooseStore\n    this.#mongoose = mongoose\n  }\n  \n  static async start() {\n    try {\n      mongoose.set('strictQuery', false)\n      await mongoose.connect(process.env['MONGO_URI'], {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n      })\n      // loggin session on DataBase\n      console.log('Data Base connection successful')\n      const mongooseStore = await new MongoStore({ mongoose: mongoose })\n      return new DataBase(mongooseStore, mongoose)\n    } catch (err) {\n      console.error('Data Base connection error')\n      console.log(err)\n    }\n  }\n\n  async getMongooseStore() {\n    return this.mongooseStore\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AACxB,OAAO,OAAO;AACd,MAAM,EAAE,WAAW,IAAI,QAAQ,cAAc;AAC7C,MAAM,WAAW,QAAQ,UAAU;AAE5B,MAAM,SAAS;AAAA,EAEpB;AAAA,EAEQ,YACN,eACAA,WACA;AACA,SAAK,gBAAgB;AACrB,SAAK,YAAYA;AAAA,EACnB;AAAA,EAEA,aAAa,QAAQ;AACnB,QAAI;AACF,eAAS,IAAI,eAAe,KAAK;AACjC,YAAM,SAAS,QAAQ,QAAQ,IAAI,cAAc;AAAA,QAC/C,iBAAiB;AAAA,QACjB,oBAAoB;AAAA,MACtB,CAAC;AAED,cAAQ,IAAI,iCAAiC;AAC7C,YAAM,gBAAgB,MAAM,IAAI,WAAW,EAAE,SAAmB,CAAC;AACjE,aAAO,IAAI,SAAS,eAAe,QAAQ;AAAA,IAC7C,SAAS,KAAP;AACA,cAAQ,MAAM,4BAA4B;AAC1C,cAAQ,IAAI,GAAG;AAAA,IACjB;AAAA,EACF;AAAA,EAEA,MAAM,mBAAmB;AACvB,WAAO,KAAK;AAAA,EACd;AACF;",
  "names": ["mongoose"]
}
