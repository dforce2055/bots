{
  "version": 3,
  "sources": ["../../../src/models/TelegramChat.ts"],
  "sourcesContent": ["import { Schema, model } from 'mongoose'\nimport {\n  BotInfo,\n  Chat,\n  Entity,\n  From,\n  iTelegramChat,\n} from '../@types'\n\nconst BotInfoSchema = new Schema<BotInfo>({\n  id: { type: Number, required: false },\n  client_id: { type: Number, required: false },\n  is_bot: { type: Boolean, required: false },\n  first_name: { type: String, required: false },\n  username: { type: String, required: false },\n  can_read_all_group_messages: { type: Boolean, required: false },\n  supports_inline_queries: { type: Boolean, required: false },\n})\n\nconst ChatSchema = new Schema<Chat>({\n  id: { type: Number, required: false },\n  first_name: { type: String, required: false },\n  username: { type: String, required: false },\n  type: { type: String, required: false },\n})\n\nconst EntitySchema = new Schema<Entity>({\n  offset: { type: Number, required: false },\n  length: { type: Number, required: false },\n  type: { type: String, required: false },\n})\n\nconst FromSchema = new Schema<From>({\n  id: { type: Number, required: false },\n  is_bot: { type: Boolean, required: false },\n  first_name: { type: String, required: false },\n  username: { type: String, required: false },\n  language_code: { type: String, required: false },\n})\n\nconst telegramChatSchema = new Schema<iTelegramChat>({\n  bot_info: BotInfoSchema,\n  message_id: { type: Number, required: false },\n  from: FromSchema,\n  chat: ChatSchema,\n  date: { type: Number, required: false },\n  text: { type: String, required: false },\n  entities: [EntitySchema],\n})\n\nexport const TelegramChat = model<iTelegramChat>('TelegramChat', telegramChatSchema)\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8B;AAS9B,MAAM,gBAAgB,IAAI,uBAAgB;AAAA,EACxC,IAAI,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACpC,WAAW,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC3C,QAAQ,EAAE,MAAM,SAAS,UAAU,MAAM;AAAA,EACzC,YAAY,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC5C,UAAU,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC1C,6BAA6B,EAAE,MAAM,SAAS,UAAU,MAAM;AAAA,EAC9D,yBAAyB,EAAE,MAAM,SAAS,UAAU,MAAM;AAC5D,CAAC;AAED,MAAM,aAAa,IAAI,uBAAa;AAAA,EAClC,IAAI,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACpC,YAAY,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC5C,UAAU,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC1C,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AACxC,CAAC;AAED,MAAM,eAAe,IAAI,uBAAe;AAAA,EACtC,QAAQ,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC,QAAQ,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AACxC,CAAC;AAED,MAAM,aAAa,IAAI,uBAAa;AAAA,EAClC,IAAI,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACpC,QAAQ,EAAE,MAAM,SAAS,UAAU,MAAM;AAAA,EACzC,YAAY,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC5C,UAAU,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC1C,eAAe,EAAE,MAAM,QAAQ,UAAU,MAAM;AACjD,CAAC;AAED,MAAM,qBAAqB,IAAI,uBAAsB;AAAA,EACnD,UAAU;AAAA,EACV,YAAY,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC5C,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACtC,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACtC,UAAU,CAAC,YAAY;AACzB,CAAC;AAEM,MAAM,mBAAe,uBAAqB,gBAAgB,kBAAkB;",
  "names": []
}
