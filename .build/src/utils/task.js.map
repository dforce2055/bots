{
  "version": 3,
  "sources": ["../../../src/utils/task.ts"],
  "sourcesContent": ["// docs: https://www.npmjs.com/package/node-cron\n// Allowed fields\n//  # \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 second (optional)\n//  # \u2502 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute\n//  # \u2502 \u2502 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour\n//  # \u2502 \u2502 \u2502 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of month\n//  # \u2502 \u2502 \u2502 \u2502 \u250C\u2500\u2500\u2500\u2500\u2500\u2500 month\n//  # \u2502 \u2502 \u2502 \u2502 \u2502 \u250C\u2500\u2500\u2500\u2500 day of week\n//  # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502\n//  # \u2502 \u2502 \u2502 \u2502 \u2502 \u2502\n//  # * * * * * *\n/* eslint-disable no-console */\nimport cron from 'node-cron'\nimport cronstrue from 'cronstrue'\n\nexport interface TaksConstructor {\n  expression: string,\n  action: Function | any,\n  options?: TaksOptions\n}\n\nexport interface TaksOptions {\n  name: string\n  timeZone?: string // 'America/Argentina/Buenos_Aires'\n  scheduled?: boolean\n}\nexport interface TaskInstance extends cron.ScheduledTask {\n  name?: string\n  start: () => void\n  stop: () => void\n}\n\nexport class Task {\n  private name: string\n  private expression: string\n  private frequency: string\n  private action: Function\n  private options: cron.ScheduleOptions\n  private instance: TaskInstance | undefined\n  private executions: number\n\n  constructor({ expression, action, options }: TaksConstructor) {\n    this.name = options?.name || 'task' + new Date().getTime()\n    this.expression = expression\n    this.frequency = cronstrue.toString(this.expression)\n    this.action = action\n    this.options = options || {}\n    this.instance = this.getTaskInstance()\n    this.executions = 0\n  }\n\n  // @getters\n  public getExpression() {\n    return this.expression\n  }\n  public getFrequency() {\n    return this.frequency\n  }\n  public getAction() {\n    return this.action\n  }\n  public getOptions() {\n    return this.options\n  }\n  public getExecutions() {\n    return this.executions\n  }\n\n  // @methods\n  public getTaskInstance() {\n    if (!cron.validate(this.expression)) {\n      console.error('Invalid expression', this.expression)\n      return undefined\n    }\n    \n    if (!this.instance) {\n      const actionAndLogger = () => {\n        this.action()\n        this.executions++\n        console.log('\u2705 Running: ', this.executions)\n      }\n      this.instance = cron.schedule(this.expression, actionAndLogger, this.options)\n    }\n    \n    return this.instance\n  }\n  public start() {\n    console.log('\uD83D\uDFE2 Starting task \uD83D\uDCC5: ', this.name)\n    this.instance?.start()\n  }\n  public stop() {\n    console.log('\uD83D\uDD34 Stopping task \uD83D\uDCC5: ', this.name)\n    this.instance?.stop()\n  }\n  public printFrequency() {\n    console.log('Frequency \uD83E\uDEA7: ', this.frequency)\n  }\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,uBAAiB;AACjB,uBAAsB;AAmBf,MAAM,KAAK;AAAA,EAShB,YAAY,EAAE,YAAY,QAAQ,QAAQ,GAAoB;AAC5D,SAAK,QAAO,mCAAS,SAAQ,SAAS,IAAI,KAAK,EAAE,QAAQ;AACzD,SAAK,aAAa;AAClB,SAAK,YAAY,iBAAAA,QAAU,SAAS,KAAK,UAAU;AACnD,SAAK,SAAS;AACd,SAAK,UAAU,WAAW,CAAC;AAC3B,SAAK,WAAW,KAAK,gBAAgB;AACrC,SAAK,aAAa;AAAA,EACpB;AAAA,EAGO,gBAAgB;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EACO,eAAe;AACpB,WAAO,KAAK;AAAA,EACd;AAAA,EACO,YAAY;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACO,aAAa;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACO,gBAAgB;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EAGO,kBAAkB;AACvB,QAAI,CAAC,iBAAAC,QAAK,SAAS,KAAK,UAAU,GAAG;AACnC,cAAQ,MAAM,sBAAsB,KAAK,UAAU;AACnD,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,KAAK,UAAU;AAClB,YAAM,kBAAkB,MAAM;AAC5B,aAAK,OAAO;AACZ,aAAK;AACL,gBAAQ,IAAI,oBAAe,KAAK,UAAU;AAAA,MAC5C;AACA,WAAK,WAAW,iBAAAA,QAAK,SAAS,KAAK,YAAY,iBAAiB,KAAK,OAAO;AAAA,IAC9E;AAEA,WAAO,KAAK;AAAA,EACd;AAAA,EACO,QAAQ;AAtFjB;AAuFI,YAAQ,IAAI,uCAAyB,KAAK,IAAI;AAC9C,eAAK,aAAL,mBAAe;AAAA,EACjB;AAAA,EACO,OAAO;AA1FhB;AA2FI,YAAQ,IAAI,uCAAyB,KAAK,IAAI;AAC9C,eAAK,aAAL,mBAAe;AAAA,EACjB;AAAA,EACO,iBAAiB;AACtB,YAAQ,IAAI,yBAAkB,KAAK,SAAS;AAAA,EAC9C;AACF;",
  "names": ["cronstrue", "cron"]
}
