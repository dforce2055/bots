{
  "version": 3,
  "sources": ["../../../src/utils/telegram.bot.ts"],
  "sourcesContent": ["import axios from 'axios'\nimport { getDolarBluePrice } from './index'\nimport { Context, Telegraf, Markup } from 'telegraf';\nimport { saveChat } from './utils'\nimport { Customer } from '../models';\nimport { CHAT_TYPE, iCustomer } from '../@types'\ninterface CTX extends Context {\n  clientId?: string\n  myOtherProp?: number\n}\n\nconst loggerMiddelware = () => async (ctx: any, next: any) => {\n  const t = ctx.myProp\n  await saveChat({\n    botInfo: ctx.botInfo,\n    chat: ctx.message,\n    type: CHAT_TYPE.TELEGRAM,\n  })\n  return next()\n}\n\nexport interface TelegramBotConstructor {\n  clientId: string\n}\n\nexport class TelegramBot {\n  private bot: any\n  private clientId: string\n  private token: string\n  private TELEGRAM_API: string\n\n  constructor({ clientId }: TelegramBotConstructor) {\n    this.clientId = clientId\n    this.token = clientId\n    this.TELEGRAM_API = `https://api.telegram.org/bot${this.token}`\n    this.bot = new Telegraf(this.token)\n    this.bot.use(Telegraf.log())\n  }\n\n  // @getters\n  // @methods\n  public async start() {\n    const customer = await this._getCustomerByBootClientId(this.clientId)\n    if (!customer) {\n      console.log('No customer found or customer is inactive')\n      return\n    }\n    \n    this.bot.use(loggerMiddelware())\n    this.bot.start((ctx: any) => {\n      const { startPayload } = ctx\n      // console.log(ctx.from)\n      // console.log(ctx.chat)\n      // console.log(ctx.message)\n      \n      if (startPayload) return ctx.reply(`Deep link payload: ${startPayload}`)\n\n      ctx.reply('Welcome')\n    })\n\n    // events listeners\n    this.bot.help((ctx: any) => {\n      ctx.reply('Send me a sticker')\n    })\n    this.bot.on('sticker', (ctx: any) => {\n      ctx.reply('\uD83D\uDC4D')\n    })\n    \n    this.bot.hears('botonera', (ctx: any) => {\n      const { from } = ctx\n      const chat = ctx.chat\n      ctx.reply(\n        'Botones',\n        {\n          reply_markup: {\n            inline_keyboard: [\n              [{ text: 'SI \uD83D\uDE0E', callback_data: 'my_fancy_event_1' }],\n              [{ text: 'NO \uD83D\uDC65', callback_data: 'my_fancy_event_2' }],\n            ],\n          },\n        }\n      )\n    })\n    this.bot.command('/botonera', async (ctx: any) => {\n      return await ctx.reply(\n        'Custom buttons keyboard',\n        Markup.keyboard([\n          ['\uD83D\uDD0D Search', '\uD83D\uDE0E Popular'], // Row1 with 2 buttons\n          ['\u2638 Setting', '\uD83D\uDCDE Feedback'], // Row2 with 2 buttons\n          ['\uD83D\uDCE2 Ads', '\u2B50\uFE0F Rate us', '\uD83D\uDC65 Share'], // Row3 with 3 buttons\n        ])\n          .oneTime()\n          .resize()\n      )\n    })\n\n    // commands\n    this.bot.command('start', async (ctx: any) => {\n      const message = `Bien, para comenzara a operar necesito ingreses tu token de acceso\uD83D\uDD11.\n      ingresa /token=TU_TOKEN_DE_ACCESO`\n      return await ctx.reply(message)\n    })\n    this.bot.command('hola', async (ctx: any) => {\n      const { from } = ctx\n      const { first_name: firstName, username } = from\n      const  message = `Hola ${ firstName || username }, \n      soy un bot \uD83E\uDD16 trader, estoy en desarrollo. \n      \uD83D\uDE80 Pronto tendr\u00E1s m\u00E1s novedades...`\n      return await ctx.reply(message)\n    })\n    this.bot.command('token', async (ctx: any) => {\n      const  message = `\uD83D\uDD11 Ingresa tu token de acceso a la plataforma, deber\u00EDa ser algo parecido a esto XXErgW222NohksffsadZrN2055PKxbl_bot.\n      Si todav\u00EDa no tenes tu token de accesso, registrate primero para obtenerlo.`\n      return await ctx.reply(message)\n    })\n    this.bot.command('sent', async (ctx: any) => {\n      const { from, message } = ctx\n      const token = message?.text?.split('=')[1]\n\n      const  replyMessage = `\uD83D\uDD11 \u2705 \u00A1Token recibido y validado! Ahora puedes comenzar a operar.`\n      return await ctx.reply(replyMessage)\n    })\n    this.bot.command('dolarblue', async (ctx: any) => {\n      const price = await this.getDolarBluePrice()\n      const message = `\uD83D\uDCB5 Cotizaci\u00F3n d\u00F3lar blue en este momento: $ ${ price }`\n      return await ctx.reply(message)\n    })\n\n    // launch bot\n    this.bot.launch()\n\n    // Enable graceful stop\n    process.once('SIGINT', () => this.bot.stop('SIGINT'))\n    process.once('SIGTERM', () => this.bot.stop('SIGTERM'))\n  }\n  private async _getCustomerByBootClientId(botClientId: string) {\n    if (!botClientId)\n      return null\n    const customer = await Customer.findOne({\n      telegram_bot_client_id: botClientId\n    })\n    // TODO check if customer is active\n    return customer\n  }\n  public async sendMessage(\n    { message, chatId }:\n    { message: string, chatId: string }) {\n    try {\n      if (!chatId || !message)\n        throw new Error('Invalid chatId or message')\n      \n      return await axios.post(`${this.TELEGRAM_API}/sendMessage`, {\n        chat_id: chatId,\n        text: message,\n        reply_markup: {\n          inline_keyboard: [\n            [{text: 'SI', callback_data: 'my_fancy_event_1'}],\n            [{text: 'NO', callback_data: 'my_fancy_event_2'}],\n          ]\n        }\n      })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  public async getDolarBluePrice() {\n    return await getDolarBluePrice()\n  }\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
